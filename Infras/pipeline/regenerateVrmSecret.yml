parameters: 
  - name: vrmPsm1TemplateFile
    type: string
  - name: vrmProjectId
    type: string
  - name: VrmAccessKey
    type: string
  - name: clientSerectName
    type: string
  - name: vrmTemplateFile
    type: string
  - name: environment
    type: string
  - name: azureSubscription
    type: string
  - name: appSericeName
    type: string
  - name: keyVaultName
    type: string
  - name: resourceGroupName
    type: string

steps:

  - bash: |
            curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
            sudo apt-get update
            sudo apt-get install -y wget
            wget https://github.com/PowerShell/PowerShell/releases/download/v7.4.3/powershell_7.4.3-1.deb_amd64.deb
            sudo dpkg -i powershell_7.4.3-1.deb_amd64.deb
            sudo apt-get install -f
            sudo ln -s /usr/bin/pwsh /usr/bin/powershell
    displayName: 'Install az'

  - checkout: self
  - task: AzureCLI@2
    name: RegenerateVRMSecrets
    displayName: "Regenerate VRM Secrets and Update KeyVault"
    inputs:
           azureSubscription:  ${{ parameters.azureSubscription }} 
           scriptType: 'pscore'
           scriptLocation: 'inlineScript'
           inlineScript: |
            Write-Host "current directory:" (Get-Location)
            $env="${{ parameters.environment }}".ToLower()
            Import-Module ${{ parameters.vrmPsm1TemplateFile }}
            $secret=Submit-VrmTemplate -templatePath ${{ parameters.vrmTemplateFile }} `
            -parameterPath "./Infras/pipeline/vrm/parameters/parameters.$env.json" `
            -projectId '${{ parameters.vrmProjectId }}' -accessKey '${{ parameters.VrmAccessKey }}'
            Write-Host $secret
            Write-Host "updating keyvault"
            Write-Host ${{ parameters.clientSerectName }}
            Write-Host ${{ parameters.keyVaultName }}
            Write-Host ${{ parameters.appSericeName }}
            Write-Host ${{ parameters.resourceGroupName }}
            az keyvault secret set --name ${{ parameters.clientSerectName }} --vault-name  ${{ parameters.keyVaultName }} --value $secret --output none
            Write-Host "restarting app service"
            az webapp restart --name ${{ parameters.appSericeName }} --resource-group ${{ parameters.resourceGroupName }}


